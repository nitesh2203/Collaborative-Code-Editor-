{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Async thunks\nexport const register = createAsyncThunk('auth/register', async ({\n  username,\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/register`, {\n      username,\n      email,\n      password\n    });\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const login = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    });\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  user: null,\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorage.removeItem('token');\n      state.token = null;\n      state.isAuthenticated = false;\n      state.user = null;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Register\n    .addCase(register.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(register.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message) || 'Registration failed';\n    })\n    // Login\n    .addCase(login.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(login.rejected, (state, action) => {\n      var _action$payload2;\n      state.loading = false;\n      state.error = ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.message) || 'Login failed';\n    });\n  }\n});\nexport const {\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","process","env","REACT_APP_API_URL","register","username","email","password","rejectWithValue","response","post","localStorage","setItem","data","token","error","login","initialState","getItem","isAuthenticated","user","loading","authSlice","name","reducers","logout","state","removeItem","clearError","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","_action$payload","message","_action$payload2","actions","reducer"],"sources":["C:/Users/Nitesh/Downloads/collaborative code editor/frontend/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Async thunks\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async ({ username, email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/register`, {\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n      localStorage.setItem('token', response.data.token);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async ({ email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/login`, {\r\n        email,\r\n        password,\r\n      });\r\n      localStorage.setItem('token', response.data.token);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: !!localStorage.getItem('token'),\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      localStorage.removeItem('token');\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Register\r\n      .addCase(register.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload?.message || 'Registration failed';\r\n      })\r\n      // Login\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload?.message || 'Login failed';\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout, clearError } = authSlice.actions;\r\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}